# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests

on:
  push:
    branches: [ main ]
  pull_request:
  schedule:
    - cron: '14 3 * * 1'  # at 03:14 on Monday.

jobs:
  pytest:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.11"
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the project
        run: uv sync --all-extras --dev --group=gap
      - name: Setup git user
        run: |
          git config --global user.name "John Doe"
          git config --global user.email johndoe@example.com
          git config --global init.defaultBranch "main"
      - name: Pytest
        run: |
          uv run python --version
          uv run pytest -vv --cov --junitxml=junit.xml -o junit_family=legacy
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # examples:
  #   runs-on: ${{ matrix.os }}
  #   needs: [ pytest ]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version:
  #         - "3.10"
  #       os:
  #         - ubuntu-latest
  #       branch:
  #         - intro
  #         - graph
  #         - ConfigurationSelection
  #         # - generate_data
  #         # - modify_graph

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install Poetry
  #       run: |
  #         pipx install poetry
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         cache: 'poetry'
  #     - name: Install package
  #       run: |
  #         poetry install --all-extras
  #     - name: Setup git user
  #       run: |
  #         git config --global user.name "John Doe"
  #         git config --global user.email johndoe@example.com
  #         git config --global init.defaultBranch "main"
  #     - name: prepare repo
  #       continue-on-error: true
  #       run: |
  #         git clone https://github.com/PythonFZ/IPS-Examples
  #         cd IPS-Examples
  #         git fetch origin
  #         git checkout ${{ matrix.branch }}
  #         poetry run dvc pull
  #     - name: run notebook
  #       run: |
  #         cd IPS-Examples
  #         poetry run jupyter nbconvert --to notebook --execute main.ipynb
  #     - name: dvc repro
  #       run: |
  #         cd IPS-Examples
  #         poetry run dvc repro -f
